name: Java CI with Gradle
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # 1：下载源码（CI/CD拉取代码到自己的本地）
    - name: Checkout
      uses: actions/checkout@master
    # 2. 设置Java环境
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    # 3. 设置gradlew执行权限
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    # 4. 缓存构建缓存
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    # 5. 项目构建
    - name: Build with Gradle
      run: ./gradlew build -x test
    # 6. 部署到服务器
    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
      with:
        source: "build/libs/dockerhub-1.0.1.jar"
        target: "/opt/dockerhub-1.0.1/temp"
    # 7. 重启服务
    - name: Deploy
      uses: appleboy/ssh-action@master # 使用ssh链接服务器
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSHKEY }}
        port: ${{ secrets.PORT }}
        script: |
          mv /opt/dockerhub-1.0.1/temp/build/libs/dockerhub-1.0.1.jar /opt/dockerhub-1.0.1/lib/
          rm -rf /opt/dockerhub-1.0.1/temp
          cd /opt/dockerhub-1.0.1/
          jps |grep DockerHubService | awk '{print $1}' | xargs kill -9
          nohup bin/dockerhub > nohup.out 2> nohup.err < /dev/null &
